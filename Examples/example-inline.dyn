<<dd_do: quietly>>
capture graph describe Graph
tempname gdate
local `gdate' = "`r(command_date)' `r(command_time)'" 
<</dd_do>>
Inline Language Calls
===============

Some preliminary text.

A code block, setup:
```{stata}
<<dd_do>>
sysuse auto
summarize weight
<</dd_do>>
```
<<dd_do: quietly>>
capture _return hold rtemp
capture graph describe Graph
local checkdate = "`r(command_date)' `r(command_time)'" 
<</dd_do>>
<<dd_skip_if: ="``gdate''"~="" & "``gdate''"=="`checkdate'">>
<<dd_graph>>
<<dd_skip_end>>
<<dd_do: quietly>>
local `gdate' = "`r(command_date)' `r(command_time)'"
capture _return restore rtemp
<</dd_do>>

The current date is <<dd_display:  c(current_date)>>

```{stata}
<<dd_do>>
return list
<</dd_do>>
```
<<dd_do: quietly>>
capture _return hold rtemp
capture graph describe Graph
local checkdate = "`r(command_date)' `r(command_time)'" 
<</dd_do>>
<<dd_skip_if: ="``gdate''"~="" & "``gdate''"=="`checkdate'">>
<<dd_graph>>
<<dd_skip_end>>
<<dd_do: quietly>>
local `gdate' = "`r(command_date)' `r(command_time)'"
capture _return restore rtemp
<</dd_do>>

Using `s

The mean weight is <<dd_display:  r(mean)>>.

Using ```stata

The maximum weight is <<dd_display:  r(max)>>.

Using ```{s}, and two calls per line.

The weight range is <<dd_display:  r(min)>> to <<dd_display:  r(max)>>.
